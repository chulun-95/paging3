// Generated by Dagger (https://dagger.dev).
package com.c_od_e.pagination.di;

import com.squareup.moshi.Moshi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Call;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final Provider<Moshi> moshiProvider;

  private final Provider<Call.Factory> callFactoryProvider;

  public NetworkModule_ProvideRetrofitFactory(Provider<Moshi> moshiProvider,
      Provider<Call.Factory> callFactoryProvider) {
    this.moshiProvider = moshiProvider;
    this.callFactoryProvider = callFactoryProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofit(moshiProvider.get(), callFactoryProvider.get());
  }

  public static NetworkModule_ProvideRetrofitFactory create(Provider<Moshi> moshiProvider,
      Provider<Call.Factory> callFactoryProvider) {
    return new NetworkModule_ProvideRetrofitFactory(moshiProvider, callFactoryProvider);
  }

  public static Retrofit provideRetrofit(Moshi moshi, Call.Factory callFactory) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRetrofit(moshi, callFactory));
  }
}
