// Generated by Dagger (https://dagger.dev).
package com.c_od_e.pagination.view.network;

import com.c_od_e.pagination.data.CatsRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkOnlyViewModel_AssistedFactory_Factory implements Factory<NetworkOnlyViewModel_AssistedFactory> {
  private final Provider<CatsRepository> repositoryProvider;

  public NetworkOnlyViewModel_AssistedFactory_Factory(Provider<CatsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public NetworkOnlyViewModel_AssistedFactory get() {
    return newInstance(repositoryProvider);
  }

  public static NetworkOnlyViewModel_AssistedFactory_Factory create(
      Provider<CatsRepository> repositoryProvider) {
    return new NetworkOnlyViewModel_AssistedFactory_Factory(repositoryProvider);
  }

  public static NetworkOnlyViewModel_AssistedFactory newInstance(
      Provider<CatsRepository> repository) {
    return new NetworkOnlyViewModel_AssistedFactory(repository);
  }
}
