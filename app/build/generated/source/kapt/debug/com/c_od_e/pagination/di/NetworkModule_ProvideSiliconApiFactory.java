// Generated by Dagger (https://dagger.dev).
package com.c_od_e.pagination.di;

import com.c_od_e.pagination.network.CatApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideSiliconApiFactory implements Factory<CatApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideSiliconApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CatApi get() {
    return provideSiliconApi(retrofitProvider.get());
  }

  public static NetworkModule_ProvideSiliconApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideSiliconApiFactory(retrofitProvider);
  }

  public static CatApi provideSiliconApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideSiliconApi(retrofit));
  }
}
